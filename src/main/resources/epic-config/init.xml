<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="init" onError="fault" xmlns="http://ws.apache.org/ns/synapse">
	<parameter name="base" description="The service Root URL"/>
	<parameter name="accessToken" description="Access Token if production FHIR server is being used"/>
	<parameter name="tokenEndpoint" description="Epic token Endpoint"/>
	<parameter name="clientId" description="Client ID of the registered application"/>
	<parameter name="privateKey" description="Private Key of the registered application inline"/>
	<parameter name="keyStore" description="Name of the keystore which private key stored"/>
	<parameter name="keyStorePass" description="Passphrase of the keystore"/>
	<parameter name="privateKeyAlias" description="Alias of private key"/>

	<sequence>
		<property name="uri.var.base" expression="$func:base"/>
		<property name="uri.var.accessToken" expression="$func:accessToken"/>
		<property name="_CONNECTOR_INTERNAL_EPIC_ACCESS_TOKEN_" expression="$func:accessToken"/>
		<property name="_CONNECTOR_INTERNAL_EPIC_CLIENT_ID_" expression="$func:clientId"/>
		<property name="_CONNECTOR_INTERNAL_EPIC_TOKEN_EP_" expression="$func:tokenEndpoint"/>
		<filter source="boolean($ctx:uri.var.accessToken)" regex="true">
			<then>
				<header name="Authorization" expression="fn:concat('Bearer ', $ctx:uri.var.accessToken)" scope="transport"/>
			</then>
			<else>
				<class name="org.wso2.carbon.connector.epic.AccessTokenHandler"/>
				<header name="Authorization" expression="fn:concat('Bearer ', $ctx:_CONNECTOR_INTERNAL_EPIC_ACCESS_TOKEN_)" scope="transport"/>
			</else>
		</filter>
	</sequence>
</template>
